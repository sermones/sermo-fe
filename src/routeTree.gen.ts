/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as QuestsImport } from './routes/quests'
import { Route as PracticeImport } from './routes/practice'
import { Route as AuthImport } from './routes/auth'
import { Route as AchievementImport } from './routes/achievement'
import { Route as IndexImport } from './routes/index'

import { Route as HomeIndexImport } from './routes/home/index'

import { Route as ChatIndexImport } from './routes/chat/index'

import { Route as HomeNewChatIndexImport } from './routes/home/newChat/index'
import { Route as HomeNewChatMakeCharacterImport } from './routes/home/newChat/makeCharacter'

// Create/Update Routes

const QuestsRoute = QuestsImport.update({
  id: '/quests',
  path: '/quests',
  getParentRoute: () => rootRoute,
} as any)

const PracticeRoute = PracticeImport.update({
  id: '/practice',
  path: '/practice',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AchievementRoute = AchievementImport.update({
  id: '/achievement',
  path: '/achievement',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)


const HomeIndexRoute = HomeIndexImport.update({
  id: '/home/',
  path: '/home/',

const ChatIndexRoute = ChatIndexImport.update({
  id: '/chat/',
  path: '/chat/',

  getParentRoute: () => rootRoute,
} as any)

const HomeNewChatIndexRoute = HomeNewChatIndexImport.update({
  id: '/home/newChat/',
  path: '/home/newChat/',
  getParentRoute: () => rootRoute,
} as any)

const HomeNewChatMakeCharacterRoute = HomeNewChatMakeCharacterImport.update({
  id: '/home/newChat/makeCharacter',
  path: '/home/newChat/makeCharacter',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/achievement': {
      id: '/achievement'
      path: '/achievement'
      fullPath: '/achievement'
      preLoaderRoute: typeof AchievementImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }

    '/practice': {
      id: '/practice'
      path: '/practice'
      fullPath: '/practice'
      preLoaderRoute: typeof PracticeImport
      parentRoute: typeof rootRoute
    }
    '/quests': {
      id: '/quests'
      path: '/quests'
      fullPath: '/quests'
      preLoaderRoute: typeof QuestsImport
      parentRoute: typeof rootRoute
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexImport

    '/chat/': {
      id: '/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatIndexImport

      parentRoute: typeof rootRoute
    }
    '/home/newChat/makeCharacter': {
      id: '/home/newChat/makeCharacter'
      path: '/home/newChat/makeCharacter'
      fullPath: '/home/newChat/makeCharacter'
      preLoaderRoute: typeof HomeNewChatMakeCharacterImport
      parentRoute: typeof rootRoute
    }
    '/home/newChat/': {
      id: '/home/newChat/'
      path: '/home/newChat'
      fullPath: '/home/newChat'
      preLoaderRoute: typeof HomeNewChatIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/achievement': typeof AchievementRoute
  '/auth': typeof AuthRoute

  '/practice': typeof PracticeRoute
  '/quests': typeof QuestsRoute
  '/home': typeof HomeIndexRoute

  '/chat': typeof ChatIndexRoute

  '/home/newChat/makeCharacter': typeof HomeNewChatMakeCharacterRoute
  '/home/newChat': typeof HomeNewChatIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/achievement': typeof AchievementRoute
  '/auth': typeof AuthRoute

  '/practice': typeof PracticeRoute
  '/quests': typeof QuestsRoute
  '/home': typeof HomeIndexRoute

  '/chat': typeof ChatIndexRoute

  '/home/newChat/makeCharacter': typeof HomeNewChatMakeCharacterRoute
  '/home/newChat': typeof HomeNewChatIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/achievement': typeof AchievementRoute
  '/auth': typeof AuthRoute

  '/practice': typeof PracticeRoute
  '/quests': typeof QuestsRoute
  '/home/': typeof HomeIndexRoute

  '/chat/': typeof ChatIndexRoute

  '/home/newChat/makeCharacter': typeof HomeNewChatMakeCharacterRoute
  '/home/newChat/': typeof HomeNewChatIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'

    | '/achievement'
    | '/auth'
    | '/practice'
    | '/quests'
    | '/home'
    | '/home/newChat/makeCharacter'
    | '/home/newChat'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/achievement'
    | '/auth'
    | '/practice'
    | '/quests'
    | '/home'
    | '/home/newChat/makeCharacter'
    | '/home/newChat'
=======
    | '/auth'
    | '/chat'
    | '/home/newChat/makeCharacter'
    | '/home/newChat'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth' | '/chat' | '/home/newChat/makeCharacter' | '/home/newChat'

  id:
    | '__root__'
    | '/'
    | '/achievement'
    | '/auth'

    | '/practice'
    | '/quests'
    | '/home/'

    | '/chat/'

    | '/home/newChat/makeCharacter'
    | '/home/newChat/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AchievementRoute: typeof AchievementRoute
  AuthRoute: typeof AuthRoute

  PracticeRoute: typeof PracticeRoute
  QuestsRoute: typeof QuestsRoute
  HomeIndexRoute: typeof HomeIndexRoute

  ChatIndexRoute: typeof ChatIndexRoute

  HomeNewChatMakeCharacterRoute: typeof HomeNewChatMakeCharacterRoute
  HomeNewChatIndexRoute: typeof HomeNewChatIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AchievementRoute: AchievementRoute,
  AuthRoute: AuthRoute,

  PracticeRoute: PracticeRoute,
  QuestsRoute: QuestsRoute,
  HomeIndexRoute: HomeIndexRoute,

  ChatIndexRoute: ChatIndexRoute,

  HomeNewChatMakeCharacterRoute: HomeNewChatMakeCharacterRoute,
  HomeNewChatIndexRoute: HomeNewChatIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/achievement",
        "/auth",

        "/practice",
        "/quests",
        "/home/",

        "/chat/",

        "/home/newChat/makeCharacter",
        "/home/newChat/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/achievement": {
      "filePath": "achievement.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },

    "/practice": {
      "filePath": "practice.tsx"
    },
    "/quests": {
      "filePath": "quests.tsx"
    },
    "/home/": {
      "filePath": "home/index.tsx"

    "/chat/": {
      "filePath": "chat/index.tsx"

    },
    "/home/newChat/makeCharacter": {
      "filePath": "home/newChat/makeCharacter.tsx"
    },
    "/home/newChat/": {
      "filePath": "home/newChat/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
