/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/auth'
import { Route as IndexImport } from './routes/index'
import { Route as HomeIndexImport } from './routes/home/index'
<<<<<<< HEAD
import { Route as HomeQuestsImport } from './routes/home/quests'
import { Route as HomePracticeImport } from './routes/home/practice'
=======
import { Route as HomeNewChatIndexImport } from './routes/home/newChat/index'
import { Route as HomeNewChatMakeCharacterImport } from './routes/home/newChat/makeCharacter'
>>>>>>> feat_JS

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HomeIndexRoute = HomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => rootRoute,
} as any)

<<<<<<< HEAD
const HomeQuestsRoute = HomeQuestsImport.update({
  id: '/home/quests',
  path: '/home/quests',
  getParentRoute: () => rootRoute,
} as any)

const HomePracticeRoute = HomePracticeImport.update({
  id: '/home/practice',
  path: '/home/practice',
=======
const HomeNewChatIndexRoute = HomeNewChatIndexImport.update({
  id: '/home/newChat/',
  path: '/home/newChat/',
  getParentRoute: () => rootRoute,
} as any)

const HomeNewChatMakeCharacterRoute = HomeNewChatMakeCharacterImport.update({
  id: '/home/newChat/makeCharacter',
  path: '/home/newChat/makeCharacter',
>>>>>>> feat_JS
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/home/practice': {
      id: '/home/practice'
      path: '/home/practice'
      fullPath: '/home/practice'
      preLoaderRoute: typeof HomePracticeImport
      parentRoute: typeof rootRoute
    }
    '/home/quests': {
      id: '/home/quests'
      path: '/home/quests'
      fullPath: '/home/quests'
      preLoaderRoute: typeof HomeQuestsImport
      parentRoute: typeof rootRoute
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexImport
      parentRoute: typeof rootRoute
    }
    '/home/newChat/makeCharacter': {
      id: '/home/newChat/makeCharacter'
      path: '/home/newChat/makeCharacter'
      fullPath: '/home/newChat/makeCharacter'
      preLoaderRoute: typeof HomeNewChatMakeCharacterImport
      parentRoute: typeof rootRoute
    }
    '/home/newChat/': {
      id: '/home/newChat/'
      path: '/home/newChat'
      fullPath: '/home/newChat'
      preLoaderRoute: typeof HomeNewChatIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/home/practice': typeof HomePracticeRoute
  '/home/quests': typeof HomeQuestsRoute
  '/home': typeof HomeIndexRoute
  '/home/newChat/makeCharacter': typeof HomeNewChatMakeCharacterRoute
  '/home/newChat': typeof HomeNewChatIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/home/practice': typeof HomePracticeRoute
  '/home/quests': typeof HomeQuestsRoute
  '/home': typeof HomeIndexRoute
  '/home/newChat/makeCharacter': typeof HomeNewChatMakeCharacterRoute
  '/home/newChat': typeof HomeNewChatIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/home/practice': typeof HomePracticeRoute
  '/home/quests': typeof HomeQuestsRoute
  '/home/': typeof HomeIndexRoute
  '/home/newChat/makeCharacter': typeof HomeNewChatMakeCharacterRoute
  '/home/newChat/': typeof HomeNewChatIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
<<<<<<< HEAD
  fullPaths: '/' | '/auth' | '/home/practice' | '/home/quests' | '/home'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth' | '/home/practice' | '/home/quests' | '/home'
  id: '__root__' | '/' | '/auth' | '/home/practice' | '/home/quests' | '/home/'
=======
  fullPaths:
    | '/'
    | '/auth'
    | '/home'
    | '/home/newChat/makeCharacter'
    | '/home/newChat'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth' | '/home' | '/home/newChat/makeCharacter' | '/home/newChat'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/home/'
    | '/home/newChat/makeCharacter'
    | '/home/newChat/'
>>>>>>> feat_JS
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRoute
  HomePracticeRoute: typeof HomePracticeRoute
  HomeQuestsRoute: typeof HomeQuestsRoute
  HomeIndexRoute: typeof HomeIndexRoute
  HomeNewChatMakeCharacterRoute: typeof HomeNewChatMakeCharacterRoute
  HomeNewChatIndexRoute: typeof HomeNewChatIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRoute,
  HomePracticeRoute: HomePracticeRoute,
  HomeQuestsRoute: HomeQuestsRoute,
  HomeIndexRoute: HomeIndexRoute,
  HomeNewChatMakeCharacterRoute: HomeNewChatMakeCharacterRoute,
  HomeNewChatIndexRoute: HomeNewChatIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
<<<<<<< HEAD
        "/home/practice",
        "/home/quests",
        "/home/"
=======
        "/home/",
        "/home/newChat/makeCharacter",
        "/home/newChat/"
>>>>>>> feat_JS
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/home/practice": {
      "filePath": "home/practice.jsx"
    },
    "/home/quests": {
      "filePath": "home/quests.jsx"
    },
    "/home/": {
      "filePath": "home/index.tsx"
    },
    "/home/newChat/makeCharacter": {
      "filePath": "home/newChat/makeCharacter.tsx"
    },
    "/home/newChat/": {
      "filePath": "home/newChat/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
